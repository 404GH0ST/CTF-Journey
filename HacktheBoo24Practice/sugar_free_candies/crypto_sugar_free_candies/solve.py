from sympy import symbols, Eq, solve
from Crypto.Util.number import long_to_bytes

cnd1, cnd2 = symbols("cnd1 cnd2")
v1 = 4196604293528562019178729176959696479940189487937638820300425092623669070870963842968690664766177268414970591786532318240478088400508536
v2 = 11553755018372917030893247277947844502733193007054515695939193023629350385471097895533448484666684220755712537476486600303519342608532236
v3 = 14943875659428467087081841480998474044007665197104764079769879270204055794811591927815227928936527971132575961879124968229204795457570030
v4 = 6336816260107995932250378492551290960420748628

cnd3 = v4 - cnd1 - cnd2

eq1 = Eq(cnd1**3 + cnd3**2 + cnd2, v1)
eq2 = Eq(cnd2**3 + cnd1**2 + cnd3, v2)
eq3 = Eq(cnd3**3 + cnd2**2 + cnd1, v3)

sol = solve([eq1, eq2, eq3], (cnd1, cnd2))


flag = b"".join([long_to_bytes(cnd) for cnd in sol[0]])
flag += long_to_bytes(v4 - sol[0][0] - sol[0][1])
print(flag.decode())
